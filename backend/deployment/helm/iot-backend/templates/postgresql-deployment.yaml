{{- if .Values.postgresql.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-auth
  namespace: {{ .Values.global.namespace }}
  labels:
    app: postgresql
    {{- include "iot-backend.labels" . | nindent 4 }}
type: Opaque
stringData:
  database: {{ .Values.postgresql.config.database }}
  username: {{ .Values.postgresql.config.user }}
  password: {{ .Values.postgresql.config.password }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    app: postgresql
    {{- include "iot-backend.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ include "iot-backend.storageClass" . }}
  resources:
    requests:
      storage: {{ .Values.postgresql.persistence.size }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: {{ .Values.global.namespace }}
  labels:
    app: postgresql
    {{- include "iot-backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.postgresql.replicaCount }}
  selector:
    matchLabels:
      app: postgresql
      {{- include "iot-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: postgresql
        {{- include "iot-backend.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: postgresql
          image: {{ include "iot-backend.image" (dict "Values" .Values "image" .Values.postgresql.image) }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - name: postgresql
              containerPort: {{ .Values.postgresql.service.port }}
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgresql-auth
                  key: database
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql-auth
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-auth
                  key: password
            - name: PGDATA
              value: {{ .Values.postgresql.persistence.mountPath }}/pgdata
          volumeMounts:
            - name: data
              mountPath: {{ .Values.postgresql.persistence.mountPath }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgresql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: {{ .Values.global.namespace }}
  labels:
    app: postgresql
    {{- include "iot-backend.labels" . | nindent 4 }}
spec:
  type: {{ .Values.postgresql.service.type }}
  ports:
    - port: {{ .Values.postgresql.service.port }}
      targetPort: postgresql
      protocol: TCP
      name: postgresql
  selector:
    app: postgresql
    {{- include "iot-backend.selectorLabels" . | nindent 4 }}
{{- end }}
