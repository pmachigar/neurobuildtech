{{- if .Values.dataIngestion.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-ingestion
  namespace: {{ .Values.global.namespace }}
  labels:
    app: data-ingestion
    {{- include "iot-backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.dataIngestion.replicaCount }}
  selector:
    matchLabels:
      app: data-ingestion
      {{- include "iot-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: data-ingestion
        {{- include "iot-backend.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.ha.nodeAffinity.enabled }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: {{ .Values.ha.nodeAffinity.key }}
                    operator: In
                    values:
                      - {{ .Values.ha.nodeAffinity.value }}
        {{- if .Values.ha.podAntiAffinity.enabled }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - data-ingestion
                topologyKey: kubernetes.io/hostname
        {{- end }}
      {{- end }}
      containers:
        - name: data-ingestion
          image: {{ include "iot-backend.image" (dict "Values" .Values "image" .Values.dataIngestion.image) }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.dataIngestion.service.port }}
              protocol: TCP
          {{- if .Values.healthChecks.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.healthChecks.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthChecks.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.healthChecks.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.healthChecks.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.healthChecks.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: {{ .Values.healthChecks.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthChecks.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.healthChecks.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.healthChecks.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.dataIngestion.resources | nindent 12 }}
          env:
            - name: SERVICE_PORT
              value: {{ .Values.dataIngestion.service.port | quote }}
            - name: INFLUXDB_HOST
              value: influxdb
            - name: INFLUXDB_PORT
              value: "8086"
            - name: MQTT_HOST
              value: mosquitto
            - name: MQTT_PORT
              value: "1883"
            - name: REDIS_HOST
              value: redis
            - name: REDIS_PORT
              value: "6379"
---
apiVersion: v1
kind: Service
metadata:
  name: data-ingestion
  namespace: {{ .Values.global.namespace }}
  labels:
    app: data-ingestion
    {{- include "iot-backend.labels" . | nindent 4 }}
spec:
  type: {{ .Values.dataIngestion.service.type }}
  ports:
    - port: {{ .Values.dataIngestion.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: data-ingestion
    {{- include "iot-backend.selectorLabels" . | nindent 4 }}
{{- if .Values.dataIngestion.autoscaling.enabled }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: data-ingestion
  namespace: {{ .Values.global.namespace }}
  labels:
    app: data-ingestion
    {{- include "iot-backend.labels" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: data-ingestion
  minReplicas: {{ .Values.dataIngestion.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.dataIngestion.autoscaling.maxReplicas }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
{{- end }}
{{- end }}
